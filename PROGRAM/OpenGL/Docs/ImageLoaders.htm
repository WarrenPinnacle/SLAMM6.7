<html><!-- #BeginTemplate "/Templates/main.dwt" -->
<head>
<!-- #BeginEditable "doctitle" --> 
<title>The Dot Docs</title>
<!-- #EndEditable -->
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body bgcolor="#FFFFFF" text="#000000">
<table width="100%" border="0" cellpadding="5">
  <tr> 
    <td width="200" align="center" valign="top"> 
      <div align="center"> 
        <table width="100%" border="2" cellpadding="5" bordercolor="#000000">
          <tr> 
            <td align="center" valign="middle" bgcolor="#000000"> 
              <div align="center"><font color="#FFFFFF"><b><font size="+2">The 
                Dot Docs </font></b></font></div>
            </td>
          </tr>
          <tr> 
            <td align="center" valign="middle" bgcolor="#FFFFFF"> 
              <p align="left"></p>
              <div align="center"> 
                <p><a href="index.htm">Introduction</a></p>
              </div>
            <div align="center"> 
                <p><b><font size="-1">[API header files]<br>
                  </font></b><a href="GLunits.htm">GL.pas, GLu.pas, Glut.pas 
                  and GLext.pas</a></p>
                <p><font size="-1"><b>[RC and buffer management]<br>
                  </b></font><a href="DotWindow.htm">DotWindow.pas<br>
                  </a><a href="DotOffscreenBuffer.htm">DotOffscreenBuffer.pas<br>
                  </a><a href="DotRTTBuffer.htm">DotRTTBuffer.pas</a></p>
                <p><font size="-1"><b>[Shaders]<br>
                  </b></font><a href="DotShaders.htm">DotShaders.pas</a></p>
                <p><font size="-1"><b>[Math library]<br>
                  </b></font><a href="DotMath.htm">DotMath.pas</a></p>
                <p><b><font size="-1">[3D model loaders]<br>
                  </font></b><a href="ModelLoaders.htm">ASE.pas, OBJ2.pas, 
                  MD2.pas, MD3.pas</a></p>
                <p><font size="-1"><b>[Image loaders]<br>
                  </b></font><a href="ImageLoaders.htm">TGA2.pas</a></p>
                <p><font size="-1"><b>[Misc. utilities]<br>
                  </b></font><a href="DotUtils.htm">DotUtils.pas<br>
                  </a><a href="DotVideo.htm">DotVideo.pas <br>
                  </a><a href="NV_parse.htm">NV_parse.pas<br>
                  </a><a href="Framework.htm">The Dot application framework</a></p>
                <p><font size="-1"><b>[Powered by]</b></font><br>
                  <a href="http://www.opengl.org" target="_blank"><img src="ogla_sm.gif" width="84" height="44" border="0" alt="OpenGL.org"></a></p>
              </div>
            </td>
          </tr>
        </table>
      </div>
    </td>
    <td align="left" valign="top"> 
      <div align="left"></div>
      <table width="100%" border="2" cellpadding="5" bordercolor="#000000">
        <tr> 
          <td align="center" valign="middle" bgcolor="#000000"> 
            <div align="center"><font color="#FFFFFF"><b><!-- #BeginEditable "Header" --><font size="+2">Image 
              loaders</font><!-- #EndEditable --></b></font></div>
          </td>
        </tr>
      </table>
      <br>
      <!-- #BeginEditable "Body" --> 
<p align="left">The current version of the Dot contains only a single image loader, 
  for use with Targa (<i>.TGA</i>) files. As for the 3D model loaders included 
  with the Dot, the TGA loader offers little more than a structured representation 
  of the raw data found in the file, so some knowledge of the TGA file format 
  is needed.</p>
<p align="left">The TGA loader can be found in <i>TGA2.pas</i> (the &quot;2&quot; 
  suffix is a legacy thing). To load a TGA file, instantiate a <i>TTGAImage</i> 
  object and call its <i>LoadFromFile()</i> or <i>LoadFromStream()</i> method. 
  The loader supports 8-bit, 24-bit and 32-bit images. Images may also be compressed 
  or paletted.</p>
<p align="left">To facilitate the use of TGA images as textures in OpenGL, a few 
  methods are provided to convert the image data to something the GL can understand.</p>
<pre align="left">  procedure ExpandToTrueColor;
  procedure BGRtoRGB;</pre>
<p align="left"><i>ExpandToTrueColor()</i> will convert 8-bit images to 24-bit 
  ones. If the image is already 24-bit or higher, nothing happens. This works 
  for both grayscale and paletted images. After you've done this, you can use 
  <i>BGRtoRGB()</i> to invert the ordering of the color components in the image. 
  Note that you don't need to do this if your video card supports <i>GL_EXT_bgra</i>.</p>
<p align="left">Finally, note that the image will automatically be flipped (if 
  necessary) such that the origin is at the lower-left pixel, i.e. so that texture 
  coordinates (0, 0) match the bottom left corner of the image.</p>
<!-- #EndEditable --></td>
  </tr>
  <tr> 
    <td colspan="2" align="center" valign="top">
      <table width="100%" border="2" cellpadding="5" bordercolor="#000000">
        <tr> 
          <td align="center" valign="middle" bgcolor="#FFFFFF"> 
            <div align="center"><b><b>&lt; <a href="index.htm">Back to start 
              page </a> &gt;</b></b></div>
          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<p align="right"><font size="-1">The <i>Delphi OpenGL Toolkit</i> was written 
  by <a href="mailto:tom@delphi3d.net">Tom Nuydens</a>.<br>
  See <a href="index.htm">main page</a> for disclaimer. For updates, visit 
  <a href="http://www.delphi3d.net">Delphi3D</a>.</font></p>
</body>
<!-- #EndTemplate --></html>
